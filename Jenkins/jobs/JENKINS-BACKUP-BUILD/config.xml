<?xml version='1.0' encoding='UTF-8'?>
<com.infradna.hudson.plugins.backup.BackupProject plugin="infradna-backup@3.22">
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>60</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>20</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.cloudbees.jenkins.plugins.PublicKey plugin="cloudbees-public-key@1.1"/>
    <com.cloudbees.plugins.deployer.DeployNowJobProperty plugin="deployer-framework@1.1">
      <oneClickDeploy>false</oneClickDeploy>
      <hosts>
        <com.cloudbees.plugins.deployer.impl.run.RunHostImpl plugin="cloudbees-deployer-plugin@6.0">
          <targets class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
            <c class="list"/>
            <list reference="../c"/>
          </targets>
          <user>(jenkins)</user>
          <account>akcdeployer</account>
        </com.cloudbees.plugins.deployer.impl.run.RunHostImpl>
      </hosts>
    </com.cloudbees.plugins.deployer.DeployNowJobProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <com.infradna.hudson.plugins.backup.BackupBuilder>
      <format class="com.infradna.hudson.plugins.backup.format.TarGzFormat"/>
      <store class="com.infradna.hudson.plugins.backup.store.SftpStore">
        <dir>/home/ubuntu/jenkins-backup</dir>
        <ssh>
          <host>54.167.145.90</host>
          <port>22</port>
          <credentialsId>ccd3edeb-8298-4524-8716-f68337714b3a</credentialsId>
        </ssh>
      </store>
      <subjects>
        <com.infradna.hudson.plugins.backup.subject.BuildRecordSubject/>
        <com.infradna.hudson.plugins.backup.subject.JobConfigurationSubject/>
      </subjects>
      <retentionPolicy class="com.infradna.hudson.plugins.backup.retention.UpToNRetentionPolicy">
        <n>10</n>
      </retentionPolicy>
      <safeDelaySeconds>0</safeDelaySeconds>
    </com.infradna.hudson.plugins.backup.BackupBuilder>
  </builders>
  <publishers>
    <jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin plugin="publish-over-ssh@1.13">
      <consolePrefix>SSH: </consolePrefix>
      <delegate>
        <publishers>
          <jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <configName>services-server</configName>
            <verbose>false</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory></remoteDirectory>
                <sourceFiles></sourceFiles>
                <excludes></excludes>
                <removePrefix></removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand>cd /home/ubuntu/repo
sudo git pull

sudo mkdir /home/ubuntu/temp/
cd /home/ubuntu/temp
sudo tar -xzf /home/ubuntu/jenkins-backup/backup-JENKINS-BACKUP-BUILD-$BUILD_NUMBER.tar.gz

sudo rm -R /home/ubuntu/repo/Jenkins/*
sudo cp -R  /home/ubuntu/temp/* /home/ubuntu/repo/Jenkins/

cd /home/ubuntu/repo

sudo git add -A &amp;&amp; sudo git commit -m &quot;Jenkins backup $(date +\&quot;%Y%m%d_%H%M%S\&quot;)&quot;

sudo rm -R /home/ubuntu/temp/
sudo git push --repo https://esheikha:$pass@github.com/esheikha/test.git</execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
          </jenkins.plugins.publish__over__ssh.BapSshPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>false</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin>
  </publishers>
  <buildWrappers>
    <EnvInjectPasswordWrapper plugin="envinject@1.92.1">
      <injectGlobalPasswords>true</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>pass</name>
          <value>W6SVyz1g7YpMXc9XMwhJ3truqk3RdfcHu9DpoksZu/c=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</com.infradna.hudson.plugins.backup.BackupProject>